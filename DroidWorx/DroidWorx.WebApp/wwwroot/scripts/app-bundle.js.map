{"version":3,"sources":["app.ts","environment.ts","main.ts","resources/index.ts","views/droids.ts","resources/elements/droid.ts","C:/Source/DroidWorx-Aurelia-dotNETCore/DroidWorx/DroidWorx.WebApp/src/app.html","C:/Source/DroidWorx-Aurelia-dotNETCore/DroidWorx/DroidWorx.WebApp/src/views/droids.html","C:/Source/DroidWorx-Aurelia-dotNETCore/DroidWorx/DroidWorx.WebApp/src/resources/elements/droid.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {HttpClient} from 'aurelia-fetch-client';\nimport {autoinject} from 'aurelia-framework';\n\n@autoinject\nexport class App {\n    header = 'Droids!';\n    droids = [];\r\n\r\n    constructor(private http: HttpClient) {\r\n        console.log(\"Init App.ts\");\r\n        http.configure(config => {\r\n            config\r\n                .useStandardConfiguration()\r\n                .withBaseUrl('http://localhost:5005/api/droids');\r\n        });\r\n    }\r\n\r\n    activate() {\r\n        console.log(\"Fetching droids\");\r\n        return this.http.fetch(\"\")\r\n            .then(response => response.json())\r\n            .then(droids => this.droids = droids);\r\n    }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import {autoinject} from 'aurelia-framework';\r\nimport {HttpClient} from 'aurelia-fetch-client';\r\n\r\n@autoinject\r\nexport class Droids {\r\n    heading = 'Droids';\r\n    droids = [];\r\n\r\n    constructor(private http: HttpClient) {\r\n        http.configure(config => {\r\n            config\r\n                .useStandardConfiguration()\r\n                .withBaseUrl('http://localhost:5005/api/droids');\r\n        });\r\n    }\r\n\r\n    activate() {\r\n        return this.http.fetch('users')\r\n            .then(response => response.json())\r\n            .then(droids => this.droids = droids);\r\n    }\r\n}","import {bindable} from 'aurelia-framework';\n\nexport class Droid {\n    @bindable name;\n    @bindable productSeries;\n    @bindable imperialContractId;\n    @bindable creditBalance;\n    @bindable height;\n\n\n\n    valueChanged(newValue, oldValue) {\n\n    }\n}\n\n",null,null,null],"sourceRoot":"..\\..\\src"}